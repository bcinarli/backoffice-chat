{"version":3,"file":"./backoffice-chat.js","sources":["webpack:///webpack/bootstrap 83ae9aa3bbd79dc413b6","webpack:///source/scripts/modules/chat/index.js","webpack:///source/scripts/index.js","webpack:///node_modules/uuid/lib/bytesToUuid.js","webpack:///node_modules/uuid/lib/rng-browser.js","webpack:///node_modules/uuid/v4.js","webpack:///node_modules/webpack/buildin/global.js","webpack:///source/scripts/modules/agent-screen/index.js","webpack:///source/scripts/modules/agent-screen/ui.js","webpack:///source/scripts/modules/client-screen/index.js","webpack:///source/scripts/modules/client-screen/ui.js","webpack:///source/scripts/modules/livechat/index.js","webpack:///source/scripts/modules/livechat/resources.js","webpack:///./styles/styles.scss"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 83ae9aa3bbd79dc413b6","/**\n * @author Bilal Cinarli\n */\n\n\nclass Chat {\n    constructor(options) {\n        this.socket   = options.socket;\n        this.messages = options.messages;\n    }\n\n    sendMessage(message, client, screenID) {\n        let data = {\n            message: message,\n            to:      client\n        };\n\n        if(message.length === 0) {\n            return;\n        }\n\n        this.socket.emit('new message', data);\n        this.addMessage(data, true, screenID);\n    }\n\n    addMessage(data, mine = false, screenID) {\n        let message      = false,\n            messageClass = 'live-chat-message-their';\n\n        if(mine === false && data.to === screenID || mine === true) {\n            message = data.message;\n        }\n\n        if(mine === true) {\n            messageClass = 'live-chat-message-mine';\n        }\n\n        if(message) {\n            let msg = this.message(message, messageClass);\n\n            this.messages.appendChild(msg);\n        }\n    }\n\n    addWarning(message) {\n        let messageClass = 'live-chat-message-warning';\n\n        let msg = this.message(message, messageClass);\n\n        this.messages.appendChild(msg);\n    }\n\n    message(msg, client) {\n        let message = document.createElement('li');\n\n        message.classList.add(client);\n        message.innerHTML = '<span class=\"live-chat-message-inner\">' + msg + '</span>';\n\n        return message;\n    }\n}\n\nexport default Chat;\n\n\n// WEBPACK FOOTER //\n// source/scripts/modules/chat/index.js","/**\n * @author Bilal Cinarli\n */\n\nimport '../styles/styles.scss';\n\nimport LiveChat from './modules/livechat';\n\nlet liveChat = new LiveChat();\n\n\n// WEBPACK FOOTER //\n// source/scripts/index.js","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/uuid/lib/bytesToUuid.js","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/uuid/lib/rng-browser.js","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/uuid/v4.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/webpack/buildin/global.js","/**\n * @author Bilal Cinarli\n */\n\nimport ScreenUI from './ui';\nimport Chat from '../chat';\n\nclass AgentScreen {\n    constructor(options) {\n        this.screenID        = 'backoffice';\n        this.socket          = options.socket;\n        this.activeChats     = {};\n        this.activeChatIndex = 1;\n\n        this.init();\n    }\n\n    init() {\n        this.wrapper();\n        this.socketEvents();\n        this.bindUI();\n    }\n\n    wrapper() {\n        let wrapper = document.createElement('div');\n\n        wrapper.id = 'live-chat-backoffice';\n        wrapper.classList.add('live-chat-backoffice');\n        wrapper.innerHTML = '<div id=\"live-chat-backoffice-tabs\" class=\"live-chat-backoffice-tabs\"></div><div id=\"live-chat-backoffice-chats\" class=\"live-chat-backoffice-chats\"></div>';\n\n        document.body.appendChild(wrapper);\n\n        this.tabs  = document.getElementById('live-chat-backoffice-tabs');\n        this.chats = document.getElementById('live-chat-backoffice-chats');\n    }\n\n    socketEvents() {\n        this.socket.on('new message', (data) => {\n            if(typeof this.activeChats[data.from] === 'undefined') {\n                this.addNewClient(data.from);\n            }\n\n            this.addMessage(data);\n        });\n\n        this.socket.on('user left', (data) => {\n            if(typeof this.activeChats[data.username] !== 'undefined') {\n                this.addWarning(this.activeChats[data.username]);\n            }\n        });\n    }\n\n    bindUI() {\n        this.tabs.addEventListener('click', (e) => {\n            e.preventDefault();\n            let el = e.target;\n\n            if(el.classList.contains('live-chat-backoffice-tab')) {\n                this.changeTab(el.href.split('#')[1], el);\n            }\n        });\n    }\n\n    bindUIs(screen) {\n        screen.form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.sendMessage(screen);\n        });\n    }\n\n    changeTab(target, tab) {\n        let activeChat = this.chats.querySelector('.live-chat-session-active'),\n            activeTab  = this.tabs.querySelector('.live-chat-tab-active');\n\n        activeChat.classList.remove('live-chat-session-active');\n        activeTab.classList.remove('live-chat-tab-active');\n\n        document.getElementById(target).classList.add('live-chat-session-active');\n        tab.classList.add('live-chat-tab-active');\n        tab.querySelector('.live-chat-unread').innerHTML = '';\n        tab.querySelector('.live-chat-unread').classList.remove('live-chat-has-unread');\n    }\n\n    addNewClient(client) {\n        let screenID = client;\n\n        this.activeChats[screenID] = {\n            screenID,\n            index:  this.activeChatIndex,\n            screen: new ScreenUI({screenID: screenID, index: this.activeChatIndex})\n        };\n\n        let wrapper  = document.getElementById('live-chat-' + screenID),\n            messages = wrapper.querySelector('.live-chat-messages-list'),\n            form     = wrapper.querySelector('.live-chat-message-form'),\n            input    = form.querySelector('.live-chat-message-input-item');\n\n        this.activeChats[screenID] = Object.assign({},\n            this.activeChats[screenID], {\n                chat: new Chat({socket: this.socket, messages: messages}),\n                form,\n                input\n            }\n        );\n\n        this.bindUIs(this.activeChats[screenID]);\n        this.activeChatIndex++;\n    }\n\n    sendMessage(screen) {\n        screen.chat.sendMessage(screen.input.value, screen.screenID, 'backoffice');\n        screen.input.value = '';\n    }\n\n    addMessage(data, mine = false) {\n        let from   = data.from,\n            tab    = document.getElementById('live-chat-tab-' + from),\n            unread = tab.querySelector('.live-chat-unread');\n\n        this.activeChats[from].chat.addMessage(data, mine, 'backoffice');\n\n        if(!tab.classList.contains('live-chat-tab-active')) {\n            unread.innerHTML = (unread.innerHTML * 1) + 1;\n            unread.classList.add('live-chat-has-unread');\n        }\n    }\n\n    addWarning(screen) {\n        screen.chat.addWarning('Client has left the conversation');\n    }\n}\n\nexport default AgentScreen;\n\n\n// WEBPACK FOOTER //\n// source/scripts/modules/agent-screen/index.js","/**\n * @author Bilal Cinarli\n */\n\nconst template = '<div class=\"live-chat-session\">' +\n                 '  <div class=\"live-chat-messages\">' +\n                 '      <ul class=\"live-chat-messages-list\"></ul>' +\n                 '  </div>' +\n                 '  <div class=\"live-chat-message\">' +\n                 '      <form class=\"live-chat-message-form\">' +\n                 '          <label class=\"live-chat-message-input\">' +\n                 '              <input type=\"text\" name=\"live-chat-message-input\" class=\"live-chat-message-input-item\" autocomplete=\"off\" placeholder=\"Type your message here\" />' +\n                 '          </label>' +\n                 '          <button class=\"live-chat-message-send\">Send</button>' +\n                 '      </form>' +\n                 '  </div>' +\n                 '</div>';\n\nclass ScreenUI {\n    constructor(options) {\n        this.screenID = options.screenID;\n        this.index    = options.index;\n        this.init();\n    }\n\n    init() {\n        this.render();\n        this.addTab();\n    }\n\n    render() {\n        let chats       = document.getElementById('live-chat-backoffice-chats'),\n            wrapper     = document.createElement('div'),\n            activeChats = chats.querySelector('.live-chat-backoffice-wrapper');\n        wrapper.id      = 'live-chat-' + this.screenID;\n        wrapper.classList.add('live-chat-backoffice-wrapper');\n\n        if(activeChats === null) {\n            wrapper.classList.add('live-chat-session-active');\n        }\n\n        wrapper.innerHTML = template;\n\n        chats.appendChild(wrapper);\n    }\n\n    addTab() {\n        let tabs       = document.getElementById('live-chat-backoffice-tabs'),\n            tab        = document.createElement('a'),\n            activeTabs = tabs.querySelector('.live-chat-backoffice-tab');\n\n        tab.classList.add('live-chat-backoffice-tab');\n\n        if(activeTabs === null) {\n            tab.classList.add('live-chat-tab-active');\n        }\n\n        tab.href      = '#live-chat-' + this.screenID;\n        tab.id        = 'live-chat-tab-' + this.screenID;\n        tab.innerHTML = 'Client ' + this.index + '<span class=\"live-chat-unread\"></span>';\n\n        tabs.appendChild(tab);\n    }\n}\n\nexport default ScreenUI;\n\n\n// WEBPACK FOOTER //\n// source/scripts/modules/agent-screen/ui.js","/**\n * @author Bilal Cinarli\n */\n\nimport ScreenUI from './ui';\nimport Chat from '../chat';\n\nclass ClientScreen {\n    constructor(options) {\n        this.screenID = options.screenID;\n        this.socket   = options.socket;\n\n        this.toggleClientScreen = this.toggleClientScreen.bind(this);\n        this.init();\n    }\n\n    init() {\n        this.screenUI = new ScreenUI();\n        this.getScreenElement();\n\n        this.chat = new Chat({socket: this.socket, messages: this.messages});\n\n        this.socket.emit('add user', this.screenID);\n\n        this.bindEvents();\n    }\n\n    getScreenElement() {\n        this.wrapper  = document.getElementById('live-chat');\n        this.toggle   = this.wrapper.querySelector('#live-chat-toggle');\n        this.messages = this.wrapper.querySelector('#live-chat-messages-list');\n        this.form     = this.wrapper.querySelector('#live-chat-message-form');\n        this.input    = this.form.querySelector('#live-chat-message-input');\n    }\n\n    bindEvents() {\n        this.toggle.addEventListener('click', this.toggleClientScreen);\n        this.form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.sendMessage();\n        });\n\n        this.socket.on('new message', (data) => {\n            this.addMessage(data);\n        });\n    }\n\n    toggleClientScreen() {\n        this.wrapper.classList.contains('live-chat-toggled')\n            ? this.wrapper.classList.remove('live-chat-toggled')\n            : this.wrapper.classList.add('live-chat-toggled');\n\n    }\n\n    sendMessage() {\n        this.chat.sendMessage(this.input.value, 'backoffice', this.screenID);\n        this.input.value = '';\n    }\n\n    addMessage(data, mine = false) {\n        this.chat.addMessage(data, mine, this.screenID);\n    }\n}\n\nexport default ClientScreen;\n\n\n// WEBPACK FOOTER //\n// source/scripts/modules/client-screen/index.js","/**\n * @author Bilal Cinarli\n */\n\nconst template = '<div class=\"live-chat-header\">' +\n                 '  <h2 class=\"live-chat-toggle\" id=\"live-chat-toggle\">Need Help?</h2>' +\n                 '</div>' +\n                 '<div class=\"live-chat-session\">' +\n                 '  <div class=\"live-chat-messages\">' +\n                 '      <ul id=\"live-chat-messages-list\"></ul>' +\n                 '  </div>' +\n                 '  <div class=\"live-chat-message\">' +\n                 '      <form id=\"live-chat-message-form\">' +\n                 '          <label class=\"live-chat-message-input\">' +\n                 '              <input type=\"text\" name=\"live-chat-message-input\" id=\"live-chat-message-input\" autocomplete=\"off\" class=\"live-chat-message-input-item\" placeholder=\"Type your message here\" />' +\n                 '          </label>' +\n                 '          <button class=\"live-chat-message-send\" id=\"live-chat-message-send\">Send</button>' +\n                 '      </form>' +\n                 '  </div>' +\n                 '</div>';\n\nclass ScreenUI {\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        this.render();\n    }\n\n    render() {\n        let wrapper = document.createElement('div');\n        wrapper.id  = 'live-chat';\n        wrapper.classList.add('live-chat-wrapper');\n\n        wrapper.innerHTML = template;\n\n        document.body.appendChild(wrapper);\n    }\n}\n\nexport default ScreenUI;\n\n\n// WEBPACK FOOTER //\n// source/scripts/modules/client-screen/ui.js","/**\n * @author Bilal Cinarli\n */\n\nconst uuid = require('uuid/v4');\n\nimport Resources from './resources';\nimport ClientScreen from '../client-screen';\nimport AgentScreen from '../agent-screen';\n\nclass LiveChat {\n    constructor() {\n        this.options  = window.liveChatOptions;\n        this.screenID = uuid();\n        this.socket   = false;\n\n        this.init();\n    }\n\n    init() {\n        Resources.addResources();\n        setTimeout(() => {\n            this.initializeSocket()\n        }, 1000);\n    }\n\n    initializeSocket() {\n        this.socket = window.io(__URL__.toString());\n\n        if(this.options.connection === 'client') {\n            this.screen = new ClientScreen({socket: this.socket, screenID: this.screenID});\n        }\n\n        if(this.options.connection === 'backoffice') {\n            this.screen = new AgentScreen({socket: this.socket});\n        }\n    }\n}\n\nexport default LiveChat;\n\n\n// WEBPACK FOOTER //\n// source/scripts/modules/livechat/index.js","/**\n * @author Bilal Cinarli\n */\n\nclass Resources {\n    static addResources() {\n        this.addSocket();\n        this.addStyles();\n    }\n\n    static addSocket() {\n        let io  = document.createElement('script'),\n            lcs = document.getElementById('liveChat-script');\n\n        io.src = __URL__ + 'socket.io/socket.io.js';\n\n        lcs.parentNode.insertBefore(io, lcs);\n    }\n\n    static addStyles() {\n        let link = document.createElement('link');\n\n        link.rel  = 'stylesheet';\n        link.type = 'text/css';\n        link.href = __URL__ + '/backoffice-chat.css';\n\n        document.getElementsByTagName('head')[0].appendChild(link);\n    }\n}\n\nexport default Resources;\n\n\n// WEBPACK FOOTER //\n// source/scripts/modules/livechat/resources.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./styles/styles.scss\n// module id = 12\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChEA;;;;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;AC1DA;AACA;AACA;AACA;;;;;AAPA;;;;AAQA;;;;;;;;;ACRA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;;;;AAIA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AAHA;AACA;AAMA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;ACpIA;;;;AAIA;AACA;AAaA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;ACjEA;;;;AAIA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAIA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;AChEA;;;;AAIA;AACA;AAgBA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;ACnCA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AATA;;;;AAIA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;ACvCA;;;;AAIA;;;;;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;AC9BA;;;;;;;;;;","sourceRoot":""}